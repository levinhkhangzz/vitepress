export { isCancel } from '@clack/core';

declare function text(opts: {
    message: string;
    placeholder?: string;
    defaultValue?: string;
    initialValue?: string;
    validate?: (value: string) => string | void;
}): Promise<string | symbol>;
declare function select(opts: {
    options: {
        value: string;
        label?: string;
    }[];
    message: string;
    initialValue?: string;
}): Promise<string | symbol>;
declare function confirm(opts: {
    message: string;
    initialValue?: boolean;
}): Promise<boolean | symbol>;
/** Universal */
declare function error(message: string): string;
declare function info(message: string): string;
declare function warn(message: string): string;
declare function success(message: string): string;
declare function failure(message: string): string;
declare function highlight(message: string): string;
declare function bold(message: string): string;
declare function code(message: string): string;
/** Command-specific */
declare function build(message: string): string;
declare function sync(message: string): string;
declare function init(message: string): string;
declare function preview(message: string): string;

export { bold, build, code, confirm, error, failure, highlight, info, init, preview, select, success, sync, text, warn };
