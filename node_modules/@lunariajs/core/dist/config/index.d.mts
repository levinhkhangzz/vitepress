import { a as LocalizationStatus, L as LunariaUserConfig, b as LunariaUserRendererConfig } from '../shared/core.8aeb6b08.mjs';
export { o as File, k as Locale, i as LunariaConfig, l as LunariaConfigSchema, j as LunariaRendererConfig, m as LunariaRendererConfigSchema, n as OptionalKeys, O as OptionalKeysSchema } from '../shared/core.8aeb6b08.mjs';
import 'zod';

declare function loadConfig(path: string): Promise<{
    userConfig: {
        dashboard: {
            title: string;
            description: string;
            ui: {
                lang: string;
                dir: "ltr" | "rtl";
                'status.done': string;
                'status.outdated': string;
                'status.missing': string;
                'status.emojiDone': string;
                'status.emojiOutdated': string;
                'status.emojiMissing': string;
                'statusByLocale.heading': string;
                'statusByLocale.detailsSummaryFormat': string;
                'statusByLocale.detailsTitleFormat': string;
                'statusByLocale.outdatedLocalizationLink': string;
                'statusByLocale.incompleteLocalizationLink': string;
                'statusByLocale.createFileLink': string;
                'statusByLocale.sourceChangeHistoryLink': string;
                'statusByLocale.missingKeys': string;
                'statusByLocale.completeLocalization': string;
                'statusByFile.heading': string;
                'statusByFile.tableRowFile': string;
                'statusByFile.tableSummaryFormat': string;
            };
            site?: string | undefined;
            basesToHide?: string[] | undefined;
            customCss?: string[] | undefined;
            favicon?: {
                external?: [{
                    type: string;
                    link: string;
                }, ...{
                    type: string;
                    link: string;
                }[]] | undefined;
                inline?: string | undefined;
            } | undefined;
        };
        repository: {
            name: string;
            branch: string;
            rootDir: string;
            hosting: "github" | "gitlab";
        };
        defaultLocale: {
            lang: string;
            label: string;
        };
        locales: [{
            lang: string;
            label: string;
        }, ...{
            lang: string;
            label: string;
        }[]];
        files: [{
            type: "universal";
            location: string;
            ignore: string[];
            pattern: string;
        } | {
            type: "dictionary";
            location: string;
            ignore: string[];
            pattern: string;
            optionalKeys?: Record<string, string[]> | undefined;
        }, ...({
            type: "universal";
            location: string;
            ignore: string[];
            pattern: string;
        } | {
            type: "dictionary";
            location: string;
            ignore: string[];
            pattern: string;
            optionalKeys?: Record<string, string[]> | undefined;
        })[]];
        ignoreKeywords: string[];
        outDir: string;
        cloneDir: string;
        $schema?: string | undefined;
        localizableProperty?: string | undefined;
        renderer?: string | undefined;
    };
    rendererConfig: {
        slots: {
            head?: ((config: {
                dashboard: {
                    title: string;
                    description: string;
                    ui: {
                        lang: string;
                        dir: "ltr" | "rtl";
                        'status.done': string;
                        'status.outdated': string;
                        'status.missing': string;
                        'status.emojiDone': string;
                        'status.emojiOutdated': string;
                        'status.emojiMissing': string;
                        'statusByLocale.heading': string;
                        'statusByLocale.detailsSummaryFormat': string;
                        'statusByLocale.detailsTitleFormat': string;
                        'statusByLocale.outdatedLocalizationLink': string;
                        'statusByLocale.incompleteLocalizationLink': string;
                        'statusByLocale.createFileLink': string;
                        'statusByLocale.sourceChangeHistoryLink': string;
                        'statusByLocale.missingKeys': string;
                        'statusByLocale.completeLocalization': string;
                        'statusByFile.heading': string;
                        'statusByFile.tableRowFile': string;
                        'statusByFile.tableSummaryFormat': string;
                    };
                    site?: string | undefined;
                    basesToHide?: string[] | undefined;
                    customCss?: string[] | undefined;
                    favicon?: {
                        external?: [{
                            type: string;
                            link: string;
                        }, ...{
                            type: string;
                            link: string;
                        }[]] | undefined;
                        inline?: string | undefined;
                    } | undefined;
                };
                repository: {
                    name: string;
                    branch: string;
                    rootDir: string;
                    hosting: "github" | "gitlab";
                };
                defaultLocale: {
                    lang: string;
                    label: string;
                };
                locales: [{
                    lang: string;
                    label: string;
                }, ...{
                    lang: string;
                    label: string;
                }[]];
                files: [{
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                }, ...({
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                })[]];
                ignoreKeywords: string[];
                outDir: string;
                cloneDir: string;
                $schema?: string | undefined;
                localizableProperty?: string | undefined;
                renderer?: string | undefined;
            }) => string) | undefined;
            beforeTitle?: ((config: {
                dashboard: {
                    title: string;
                    description: string;
                    ui: {
                        lang: string;
                        dir: "ltr" | "rtl";
                        'status.done': string;
                        'status.outdated': string;
                        'status.missing': string;
                        'status.emojiDone': string;
                        'status.emojiOutdated': string;
                        'status.emojiMissing': string;
                        'statusByLocale.heading': string;
                        'statusByLocale.detailsSummaryFormat': string;
                        'statusByLocale.detailsTitleFormat': string;
                        'statusByLocale.outdatedLocalizationLink': string;
                        'statusByLocale.incompleteLocalizationLink': string;
                        'statusByLocale.createFileLink': string;
                        'statusByLocale.sourceChangeHistoryLink': string;
                        'statusByLocale.missingKeys': string;
                        'statusByLocale.completeLocalization': string;
                        'statusByFile.heading': string;
                        'statusByFile.tableRowFile': string;
                        'statusByFile.tableSummaryFormat': string;
                    };
                    site?: string | undefined;
                    basesToHide?: string[] | undefined;
                    customCss?: string[] | undefined;
                    favicon?: {
                        external?: [{
                            type: string;
                            link: string;
                        }, ...{
                            type: string;
                            link: string;
                        }[]] | undefined;
                        inline?: string | undefined;
                    } | undefined;
                };
                repository: {
                    name: string;
                    branch: string;
                    rootDir: string;
                    hosting: "github" | "gitlab";
                };
                defaultLocale: {
                    lang: string;
                    label: string;
                };
                locales: [{
                    lang: string;
                    label: string;
                }, ...{
                    lang: string;
                    label: string;
                }[]];
                files: [{
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                }, ...({
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                })[]];
                ignoreKeywords: string[];
                outDir: string;
                cloneDir: string;
                $schema?: string | undefined;
                localizableProperty?: string | undefined;
                renderer?: string | undefined;
            }) => string) | undefined;
            afterTitle?: ((config: {
                dashboard: {
                    title: string;
                    description: string;
                    ui: {
                        lang: string;
                        dir: "ltr" | "rtl";
                        'status.done': string;
                        'status.outdated': string;
                        'status.missing': string;
                        'status.emojiDone': string;
                        'status.emojiOutdated': string;
                        'status.emojiMissing': string;
                        'statusByLocale.heading': string;
                        'statusByLocale.detailsSummaryFormat': string;
                        'statusByLocale.detailsTitleFormat': string;
                        'statusByLocale.outdatedLocalizationLink': string;
                        'statusByLocale.incompleteLocalizationLink': string;
                        'statusByLocale.createFileLink': string;
                        'statusByLocale.sourceChangeHistoryLink': string;
                        'statusByLocale.missingKeys': string;
                        'statusByLocale.completeLocalization': string;
                        'statusByFile.heading': string;
                        'statusByFile.tableRowFile': string;
                        'statusByFile.tableSummaryFormat': string;
                    };
                    site?: string | undefined;
                    basesToHide?: string[] | undefined;
                    customCss?: string[] | undefined;
                    favicon?: {
                        external?: [{
                            type: string;
                            link: string;
                        }, ...{
                            type: string;
                            link: string;
                        }[]] | undefined;
                        inline?: string | undefined;
                    } | undefined;
                };
                repository: {
                    name: string;
                    branch: string;
                    rootDir: string;
                    hosting: "github" | "gitlab";
                };
                defaultLocale: {
                    lang: string;
                    label: string;
                };
                locales: [{
                    lang: string;
                    label: string;
                }, ...{
                    lang: string;
                    label: string;
                }[]];
                files: [{
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                }, ...({
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                })[]];
                ignoreKeywords: string[];
                outDir: string;
                cloneDir: string;
                $schema?: string | undefined;
                localizableProperty?: string | undefined;
                renderer?: string | undefined;
            }) => string) | undefined;
            afterStatusByLocale?: ((config: {
                dashboard: {
                    title: string;
                    description: string;
                    ui: {
                        lang: string;
                        dir: "ltr" | "rtl";
                        'status.done': string;
                        'status.outdated': string;
                        'status.missing': string;
                        'status.emojiDone': string;
                        'status.emojiOutdated': string;
                        'status.emojiMissing': string;
                        'statusByLocale.heading': string;
                        'statusByLocale.detailsSummaryFormat': string;
                        'statusByLocale.detailsTitleFormat': string;
                        'statusByLocale.outdatedLocalizationLink': string;
                        'statusByLocale.incompleteLocalizationLink': string;
                        'statusByLocale.createFileLink': string;
                        'statusByLocale.sourceChangeHistoryLink': string;
                        'statusByLocale.missingKeys': string;
                        'statusByLocale.completeLocalization': string;
                        'statusByFile.heading': string;
                        'statusByFile.tableRowFile': string;
                        'statusByFile.tableSummaryFormat': string;
                    };
                    site?: string | undefined;
                    basesToHide?: string[] | undefined;
                    customCss?: string[] | undefined;
                    favicon?: {
                        external?: [{
                            type: string;
                            link: string;
                        }, ...{
                            type: string;
                            link: string;
                        }[]] | undefined;
                        inline?: string | undefined;
                    } | undefined;
                };
                repository: {
                    name: string;
                    branch: string;
                    rootDir: string;
                    hosting: "github" | "gitlab";
                };
                defaultLocale: {
                    lang: string;
                    label: string;
                };
                locales: [{
                    lang: string;
                    label: string;
                }, ...{
                    lang: string;
                    label: string;
                }[]];
                files: [{
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                }, ...({
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                })[]];
                ignoreKeywords: string[];
                outDir: string;
                cloneDir: string;
                $schema?: string | undefined;
                localizableProperty?: string | undefined;
                renderer?: string | undefined;
            }) => string) | undefined;
            afterStatusByFile?: ((config: {
                dashboard: {
                    title: string;
                    description: string;
                    ui: {
                        lang: string;
                        dir: "ltr" | "rtl";
                        'status.done': string;
                        'status.outdated': string;
                        'status.missing': string;
                        'status.emojiDone': string;
                        'status.emojiOutdated': string;
                        'status.emojiMissing': string;
                        'statusByLocale.heading': string;
                        'statusByLocale.detailsSummaryFormat': string;
                        'statusByLocale.detailsTitleFormat': string;
                        'statusByLocale.outdatedLocalizationLink': string;
                        'statusByLocale.incompleteLocalizationLink': string;
                        'statusByLocale.createFileLink': string;
                        'statusByLocale.sourceChangeHistoryLink': string;
                        'statusByLocale.missingKeys': string;
                        'statusByLocale.completeLocalization': string;
                        'statusByFile.heading': string;
                        'statusByFile.tableRowFile': string;
                        'statusByFile.tableSummaryFormat': string;
                    };
                    site?: string | undefined;
                    basesToHide?: string[] | undefined;
                    customCss?: string[] | undefined;
                    favicon?: {
                        external?: [{
                            type: string;
                            link: string;
                        }, ...{
                            type: string;
                            link: string;
                        }[]] | undefined;
                        inline?: string | undefined;
                    } | undefined;
                };
                repository: {
                    name: string;
                    branch: string;
                    rootDir: string;
                    hosting: "github" | "gitlab";
                };
                defaultLocale: {
                    lang: string;
                    label: string;
                };
                locales: [{
                    lang: string;
                    label: string;
                }, ...{
                    lang: string;
                    label: string;
                }[]];
                files: [{
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                }, ...({
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                })[]];
                ignoreKeywords: string[];
                outDir: string;
                cloneDir: string;
                $schema?: string | undefined;
                localizableProperty?: string | undefined;
                renderer?: string | undefined;
            }) => string) | undefined;
        };
        overrides: {
            meta?: ((config: {
                dashboard: {
                    title: string;
                    description: string;
                    ui: {
                        lang: string;
                        dir: "ltr" | "rtl";
                        'status.done': string;
                        'status.outdated': string;
                        'status.missing': string;
                        'status.emojiDone': string;
                        'status.emojiOutdated': string;
                        'status.emojiMissing': string;
                        'statusByLocale.heading': string;
                        'statusByLocale.detailsSummaryFormat': string;
                        'statusByLocale.detailsTitleFormat': string;
                        'statusByLocale.outdatedLocalizationLink': string;
                        'statusByLocale.incompleteLocalizationLink': string;
                        'statusByLocale.createFileLink': string;
                        'statusByLocale.sourceChangeHistoryLink': string;
                        'statusByLocale.missingKeys': string;
                        'statusByLocale.completeLocalization': string;
                        'statusByFile.heading': string;
                        'statusByFile.tableRowFile': string;
                        'statusByFile.tableSummaryFormat': string;
                    };
                    site?: string | undefined;
                    basesToHide?: string[] | undefined;
                    customCss?: string[] | undefined;
                    favicon?: {
                        external?: [{
                            type: string;
                            link: string;
                        }, ...{
                            type: string;
                            link: string;
                        }[]] | undefined;
                        inline?: string | undefined;
                    } | undefined;
                };
                repository: {
                    name: string;
                    branch: string;
                    rootDir: string;
                    hosting: "github" | "gitlab";
                };
                defaultLocale: {
                    lang: string;
                    label: string;
                };
                locales: [{
                    lang: string;
                    label: string;
                }, ...{
                    lang: string;
                    label: string;
                }[]];
                files: [{
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                }, ...({
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                })[]];
                ignoreKeywords: string[];
                outDir: string;
                cloneDir: string;
                $schema?: string | undefined;
                localizableProperty?: string | undefined;
                renderer?: string | undefined;
            }) => string) | undefined;
            body?: ((config: {
                dashboard: {
                    title: string;
                    description: string;
                    ui: {
                        lang: string;
                        dir: "ltr" | "rtl";
                        'status.done': string;
                        'status.outdated': string;
                        'status.missing': string;
                        'status.emojiDone': string;
                        'status.emojiOutdated': string;
                        'status.emojiMissing': string;
                        'statusByLocale.heading': string;
                        'statusByLocale.detailsSummaryFormat': string;
                        'statusByLocale.detailsTitleFormat': string;
                        'statusByLocale.outdatedLocalizationLink': string;
                        'statusByLocale.incompleteLocalizationLink': string;
                        'statusByLocale.createFileLink': string;
                        'statusByLocale.sourceChangeHistoryLink': string;
                        'statusByLocale.missingKeys': string;
                        'statusByLocale.completeLocalization': string;
                        'statusByFile.heading': string;
                        'statusByFile.tableRowFile': string;
                        'statusByFile.tableSummaryFormat': string;
                    };
                    site?: string | undefined;
                    basesToHide?: string[] | undefined;
                    customCss?: string[] | undefined;
                    favicon?: {
                        external?: [{
                            type: string;
                            link: string;
                        }, ...{
                            type: string;
                            link: string;
                        }[]] | undefined;
                        inline?: string | undefined;
                    } | undefined;
                };
                repository: {
                    name: string;
                    branch: string;
                    rootDir: string;
                    hosting: "github" | "gitlab";
                };
                defaultLocale: {
                    lang: string;
                    label: string;
                };
                locales: [{
                    lang: string;
                    label: string;
                }, ...{
                    lang: string;
                    label: string;
                }[]];
                files: [{
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                }, ...({
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                })[]];
                ignoreKeywords: string[];
                outDir: string;
                cloneDir: string;
                $schema?: string | undefined;
                localizableProperty?: string | undefined;
                renderer?: string | undefined;
            }, status: LocalizationStatus[]) => string) | undefined;
            statusByLocale?: ((config: {
                dashboard: {
                    title: string;
                    description: string;
                    ui: {
                        lang: string;
                        dir: "ltr" | "rtl";
                        'status.done': string;
                        'status.outdated': string;
                        'status.missing': string;
                        'status.emojiDone': string;
                        'status.emojiOutdated': string;
                        'status.emojiMissing': string;
                        'statusByLocale.heading': string;
                        'statusByLocale.detailsSummaryFormat': string;
                        'statusByLocale.detailsTitleFormat': string;
                        'statusByLocale.outdatedLocalizationLink': string;
                        'statusByLocale.incompleteLocalizationLink': string;
                        'statusByLocale.createFileLink': string;
                        'statusByLocale.sourceChangeHistoryLink': string;
                        'statusByLocale.missingKeys': string;
                        'statusByLocale.completeLocalization': string;
                        'statusByFile.heading': string;
                        'statusByFile.tableRowFile': string;
                        'statusByFile.tableSummaryFormat': string;
                    };
                    site?: string | undefined;
                    basesToHide?: string[] | undefined;
                    customCss?: string[] | undefined;
                    favicon?: {
                        external?: [{
                            type: string;
                            link: string;
                        }, ...{
                            type: string;
                            link: string;
                        }[]] | undefined;
                        inline?: string | undefined;
                    } | undefined;
                };
                repository: {
                    name: string;
                    branch: string;
                    rootDir: string;
                    hosting: "github" | "gitlab";
                };
                defaultLocale: {
                    lang: string;
                    label: string;
                };
                locales: [{
                    lang: string;
                    label: string;
                }, ...{
                    lang: string;
                    label: string;
                }[]];
                files: [{
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                }, ...({
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                })[]];
                ignoreKeywords: string[];
                outDir: string;
                cloneDir: string;
                $schema?: string | undefined;
                localizableProperty?: string | undefined;
                renderer?: string | undefined;
            }, status: LocalizationStatus[]) => string) | undefined;
            statusByFile?: ((config: {
                dashboard: {
                    title: string;
                    description: string;
                    ui: {
                        lang: string;
                        dir: "ltr" | "rtl";
                        'status.done': string;
                        'status.outdated': string;
                        'status.missing': string;
                        'status.emojiDone': string;
                        'status.emojiOutdated': string;
                        'status.emojiMissing': string;
                        'statusByLocale.heading': string;
                        'statusByLocale.detailsSummaryFormat': string;
                        'statusByLocale.detailsTitleFormat': string;
                        'statusByLocale.outdatedLocalizationLink': string;
                        'statusByLocale.incompleteLocalizationLink': string;
                        'statusByLocale.createFileLink': string;
                        'statusByLocale.sourceChangeHistoryLink': string;
                        'statusByLocale.missingKeys': string;
                        'statusByLocale.completeLocalization': string;
                        'statusByFile.heading': string;
                        'statusByFile.tableRowFile': string;
                        'statusByFile.tableSummaryFormat': string;
                    };
                    site?: string | undefined;
                    basesToHide?: string[] | undefined;
                    customCss?: string[] | undefined;
                    favicon?: {
                        external?: [{
                            type: string;
                            link: string;
                        }, ...{
                            type: string;
                            link: string;
                        }[]] | undefined;
                        inline?: string | undefined;
                    } | undefined;
                };
                repository: {
                    name: string;
                    branch: string;
                    rootDir: string;
                    hosting: "github" | "gitlab";
                };
                defaultLocale: {
                    lang: string;
                    label: string;
                };
                locales: [{
                    lang: string;
                    label: string;
                }, ...{
                    lang: string;
                    label: string;
                }[]];
                files: [{
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                }, ...({
                    type: "universal";
                    location: string;
                    ignore: string[];
                    pattern: string;
                } | {
                    type: "dictionary";
                    location: string;
                    ignore: string[];
                    pattern: string;
                    optionalKeys?: Record<string, string[]> | undefined;
                })[]];
                ignoreKeywords: string[];
                outDir: string;
                cloneDir: string;
                $schema?: string | undefined;
                localizableProperty?: string | undefined;
                renderer?: string | undefined;
            }, status: LocalizationStatus[]) => string) | undefined;
        };
    } | undefined;
}>;
declare function loadRendererConfig(path: string | undefined): Promise<{
    slots: {
        head?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }) => string) | undefined;
        beforeTitle?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }) => string) | undefined;
        afterTitle?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }) => string) | undefined;
        afterStatusByLocale?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }) => string) | undefined;
        afterStatusByFile?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }) => string) | undefined;
    };
    overrides: {
        meta?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }) => string) | undefined;
        body?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }, status: LocalizationStatus[]) => string) | undefined;
        statusByLocale?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }, status: LocalizationStatus[]) => string) | undefined;
        statusByFile?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }, status: LocalizationStatus[]) => string) | undefined;
    };
} | undefined>;
declare function validateConfig(config: LunariaUserConfig): {
    dashboard: {
        title: string;
        description: string;
        ui: {
            lang: string;
            dir: "ltr" | "rtl";
            'status.done': string;
            'status.outdated': string;
            'status.missing': string;
            'status.emojiDone': string;
            'status.emojiOutdated': string;
            'status.emojiMissing': string;
            'statusByLocale.heading': string;
            'statusByLocale.detailsSummaryFormat': string;
            'statusByLocale.detailsTitleFormat': string;
            'statusByLocale.outdatedLocalizationLink': string;
            'statusByLocale.incompleteLocalizationLink': string;
            'statusByLocale.createFileLink': string;
            'statusByLocale.sourceChangeHistoryLink': string;
            'statusByLocale.missingKeys': string;
            'statusByLocale.completeLocalization': string;
            'statusByFile.heading': string;
            'statusByFile.tableRowFile': string;
            'statusByFile.tableSummaryFormat': string;
        };
        site?: string | undefined;
        basesToHide?: string[] | undefined;
        customCss?: string[] | undefined;
        favicon?: {
            external?: [{
                type: string;
                link: string;
            }, ...{
                type: string;
                link: string;
            }[]] | undefined;
            inline?: string | undefined;
        } | undefined;
    };
    repository: {
        name: string;
        branch: string;
        rootDir: string;
        hosting: "github" | "gitlab";
    };
    defaultLocale: {
        lang: string;
        label: string;
    };
    locales: [{
        lang: string;
        label: string;
    }, ...{
        lang: string;
        label: string;
    }[]];
    files: [{
        type: "universal";
        location: string;
        ignore: string[];
        pattern: string;
    } | {
        type: "dictionary";
        location: string;
        ignore: string[];
        pattern: string;
        optionalKeys?: Record<string, string[]> | undefined;
    }, ...({
        type: "universal";
        location: string;
        ignore: string[];
        pattern: string;
    } | {
        type: "dictionary";
        location: string;
        ignore: string[];
        pattern: string;
        optionalKeys?: Record<string, string[]> | undefined;
    })[]];
    ignoreKeywords: string[];
    outDir: string;
    cloneDir: string;
    $schema?: string | undefined;
    localizableProperty?: string | undefined;
    renderer?: string | undefined;
};
declare function validateRendererConfig(config: LunariaUserRendererConfig): {
    slots: {
        head?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }) => string) | undefined;
        beforeTitle?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }) => string) | undefined;
        afterTitle?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }) => string) | undefined;
        afterStatusByLocale?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }) => string) | undefined;
        afterStatusByFile?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }) => string) | undefined;
    };
    overrides: {
        meta?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }) => string) | undefined;
        body?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }, status: LocalizationStatus[]) => string) | undefined;
        statusByLocale?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }, status: LocalizationStatus[]) => string) | undefined;
        statusByFile?: ((config: {
            dashboard: {
                title: string;
                description: string;
                ui: {
                    lang: string;
                    dir: "ltr" | "rtl";
                    'status.done': string;
                    'status.outdated': string;
                    'status.missing': string;
                    'status.emojiDone': string;
                    'status.emojiOutdated': string;
                    'status.emojiMissing': string;
                    'statusByLocale.heading': string;
                    'statusByLocale.detailsSummaryFormat': string;
                    'statusByLocale.detailsTitleFormat': string;
                    'statusByLocale.outdatedLocalizationLink': string;
                    'statusByLocale.incompleteLocalizationLink': string;
                    'statusByLocale.createFileLink': string;
                    'statusByLocale.sourceChangeHistoryLink': string;
                    'statusByLocale.missingKeys': string;
                    'statusByLocale.completeLocalization': string;
                    'statusByFile.heading': string;
                    'statusByFile.tableRowFile': string;
                    'statusByFile.tableSummaryFormat': string;
                };
                site?: string | undefined;
                basesToHide?: string[] | undefined;
                customCss?: string[] | undefined;
                favicon?: {
                    external?: [{
                        type: string;
                        link: string;
                    }, ...{
                        type: string;
                        link: string;
                    }[]] | undefined;
                    inline?: string | undefined;
                } | undefined;
            };
            repository: {
                name: string;
                branch: string;
                rootDir: string;
                hosting: "github" | "gitlab";
            };
            defaultLocale: {
                lang: string;
                label: string;
            };
            locales: [{
                lang: string;
                label: string;
            }, ...{
                lang: string;
                label: string;
            }[]];
            files: [{
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            }, ...({
                type: "universal";
                location: string;
                ignore: string[];
                pattern: string;
            } | {
                type: "dictionary";
                location: string;
                ignore: string[];
                pattern: string;
                optionalKeys?: Record<string, string[]> | undefined;
            })[]];
            ignoreKeywords: string[];
            outDir: string;
            cloneDir: string;
            $schema?: string | undefined;
            localizableProperty?: string | undefined;
            renderer?: string | undefined;
        }, status: LocalizationStatus[]) => string) | undefined;
    };
};
declare function readConfig(path: string): any;
declare function writeConfig(path: string, config: LunariaUserConfig): void;

export { LunariaUserConfig, LunariaUserRendererConfig, loadConfig, loadRendererConfig, readConfig, validateConfig, validateRendererConfig, writeConfig };
