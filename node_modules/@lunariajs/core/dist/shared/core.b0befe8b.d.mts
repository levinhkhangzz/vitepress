import { z } from 'zod';

declare const DashboardSchema: z.ZodDefault<z.ZodObject<{
    /** The title of your localization dashboard, used as both the main heading and meta title of the page */
    title: z.ZodDefault<z.ZodString>;
    /** The description of your localization dashboard, used in the meta tags of the page */
    description: z.ZodDefault<z.ZodString>;
    /** The deployed URL of your localization dashboard, used in the meta tags of the page */
    site: z.ZodOptional<z.ZodString>;
    /** Array of path bases to hide from the rendered dashboard links */
    basesToHide: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    /** Array of relative paths to CSS files to be inlined into the dashboard */
    customCss: z.ZodEffects<z.ZodOptional<z.ZodArray<z.ZodString, "many">>, string[] | undefined, string[] | undefined>;
    /** The favicon(s) to be used by your dashboard */
    favicon: z.ZodEffects<z.ZodOptional<z.ZodObject<{
        external: z.ZodOptional<z.ZodArray<z.ZodObject<{
            link: z.ZodString;
            type: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: string;
            link: string;
        }, {
            type: string;
            link: string;
        }>, "atleastone">>;
        inline: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    }, "strip", z.ZodTypeAny, {
        external?: [{
            type: string;
            link: string;
        }, ...{
            type: string;
            link: string;
        }[]] | undefined;
        inline?: string | undefined;
    }, {
        external?: [{
            type: string;
            link: string;
        }, ...{
            type: string;
            link: string;
        }[]] | undefined;
        inline?: string | undefined;
    }>>, {
        external?: [{
            type: string;
            link: string;
        }, ...{
            type: string;
            link: string;
        }[]] | undefined;
        inline?: string | undefined;
    } | undefined, {
        external?: [{
            type: string;
            link: string;
        }, ...{
            type: string;
            link: string;
        }[]] | undefined;
        inline?: string | undefined;
    } | undefined>;
    /** UI dictionary of the dashboard, including the desired `lang` and `dir` attributes of the page */
    ui: z.ZodDefault<z.ZodObject<{
        /** The BCP-47 tag of the dashboard's UI, used as the page's `lang` attribute, e.g. `'en'` or `'pt-BR'` */
        lang: z.ZodDefault<z.ZodString>;
        /** The directionality of the page's text, used as the page's `dir` attribute. It can be either `'ltr'` (left-to-right) or `'rtl'` (right-to-left) */
        dir: z.ZodDefault<z.ZodUnion<[z.ZodLiteral<"ltr">, z.ZodLiteral<"rtl">]>>;
        /** The dashboard status of 'done' */
        'status.done': z.ZodDefault<z.ZodString>;
        /** The dashboard status of 'outdated' */
        'status.outdated': z.ZodDefault<z.ZodString>;
        /** The dashboard status 'missing' */
        'status.missing': z.ZodDefault<z.ZodString>;
        /** The dashboard status emoji for 'done' */
        'status.emojiDone': z.ZodDefault<z.ZodString>;
        /** The dashboard status emoji for 'outdated' */
        'status.emojiOutdated': z.ZodDefault<z.ZodString>;
        /** The dashboard status emoji for 'missing' */
        'status.emojiMissing': z.ZodDefault<z.ZodString>;
        /** The heading text that precedes the dropdown lists of each locale's individual progress */
        'statusByLocale.heading': z.ZodDefault<z.ZodString>;
        /** The locale's individual status details summary format. The '{*_amount}' and `{*_word}`
         * are placeholder values for the amount of files (e.g. '10') in the status and the status word
         * (e.g. 'done'), respectively.  */
        'statusByLocale.detailsSummaryFormat': z.ZodDefault<z.ZodString>;
        /** The locale's details title format. The `{locale_name} and `{locale_tag}` are placeholder values
         *  for the locale's name (e.g. English) and the locale's BCP-47 tag (e.g. en), respectively.  */
        'statusByLocale.detailsTitleFormat': z.ZodDefault<z.ZodString>;
        /** The text for the locale's details oudated localization link */
        'statusByLocale.outdatedLocalizationLink': z.ZodDefault<z.ZodString>;
        /** The text for the locale's details incomplete localization link */
        'statusByLocale.incompleteLocalizationLink': z.ZodDefault<z.ZodString>;
        /** The text for the locale's details create file link */
        'statusByLocale.createFileLink': z.ZodDefault<z.ZodString>;
        /** The text for the locale's details source change history link */
        'statusByLocale.sourceChangeHistoryLink': z.ZodDefault<z.ZodString>;
        /** The text for the locale's details UI dictionary missing keys heading */
        'statusByLocale.missingKeys': z.ZodDefault<z.ZodString>;
        /** The text shown in the locale's details when it is complete */
        'statusByLocale.completeLocalization': z.ZodDefault<z.ZodString>;
        /** The heading text that precedes the table with all locale's status by file */
        'statusByFile.heading': z.ZodDefault<z.ZodString>;
        /** The text for the status dashboard table's 'file' row head */
        'statusByFile.tableRowFile': z.ZodDefault<z.ZodString>;
        /** The dashboard table's summary format. The `{*_emoji}` and `{*_word}` are placeholder values for the status emoji (e.g. '‚ùå') and its word (e.g. 'missing') */
        'statusByFile.tableSummaryFormat': z.ZodDefault<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        lang: string;
        dir: "ltr" | "rtl";
        'status.done': string;
        'status.outdated': string;
        'status.missing': string;
        'status.emojiDone': string;
        'status.emojiOutdated': string;
        'status.emojiMissing': string;
        'statusByLocale.heading': string;
        'statusByLocale.detailsSummaryFormat': string;
        'statusByLocale.detailsTitleFormat': string;
        'statusByLocale.outdatedLocalizationLink': string;
        'statusByLocale.incompleteLocalizationLink': string;
        'statusByLocale.createFileLink': string;
        'statusByLocale.sourceChangeHistoryLink': string;
        'statusByLocale.missingKeys': string;
        'statusByLocale.completeLocalization': string;
        'statusByFile.heading': string;
        'statusByFile.tableRowFile': string;
        'statusByFile.tableSummaryFormat': string;
    }, {
        lang?: string | undefined;
        dir?: "ltr" | "rtl" | undefined;
        'status.done'?: string | undefined;
        'status.outdated'?: string | undefined;
        'status.missing'?: string | undefined;
        'status.emojiDone'?: string | undefined;
        'status.emojiOutdated'?: string | undefined;
        'status.emojiMissing'?: string | undefined;
        'statusByLocale.heading'?: string | undefined;
        'statusByLocale.detailsSummaryFormat'?: string | undefined;
        'statusByLocale.detailsTitleFormat'?: string | undefined;
        'statusByLocale.outdatedLocalizationLink'?: string | undefined;
        'statusByLocale.incompleteLocalizationLink'?: string | undefined;
        'statusByLocale.createFileLink'?: string | undefined;
        'statusByLocale.sourceChangeHistoryLink'?: string | undefined;
        'statusByLocale.missingKeys'?: string | undefined;
        'statusByLocale.completeLocalization'?: string | undefined;
        'statusByFile.heading'?: string | undefined;
        'statusByFile.tableRowFile'?: string | undefined;
        'statusByFile.tableSummaryFormat'?: string | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    title: string;
    description: string;
    ui: {
        lang: string;
        dir: "ltr" | "rtl";
        'status.done': string;
        'status.outdated': string;
        'status.missing': string;
        'status.emojiDone': string;
        'status.emojiOutdated': string;
        'status.emojiMissing': string;
        'statusByLocale.heading': string;
        'statusByLocale.detailsSummaryFormat': string;
        'statusByLocale.detailsTitleFormat': string;
        'statusByLocale.outdatedLocalizationLink': string;
        'statusByLocale.incompleteLocalizationLink': string;
        'statusByLocale.createFileLink': string;
        'statusByLocale.sourceChangeHistoryLink': string;
        'statusByLocale.missingKeys': string;
        'statusByLocale.completeLocalization': string;
        'statusByFile.heading': string;
        'statusByFile.tableRowFile': string;
        'statusByFile.tableSummaryFormat': string;
    };
    site?: string | undefined;
    basesToHide?: string[] | undefined;
    customCss?: string[] | undefined;
    favicon?: {
        external?: [{
            type: string;
            link: string;
        }, ...{
            type: string;
            link: string;
        }[]] | undefined;
        inline?: string | undefined;
    } | undefined;
}, {
    title?: string | undefined;
    description?: string | undefined;
    site?: string | undefined;
    basesToHide?: string[] | undefined;
    customCss?: string[] | undefined;
    favicon?: {
        external?: [{
            type: string;
            link: string;
        }, ...{
            type: string;
            link: string;
        }[]] | undefined;
        inline?: string | undefined;
    } | undefined;
    ui?: {
        lang?: string | undefined;
        dir?: "ltr" | "rtl" | undefined;
        'status.done'?: string | undefined;
        'status.outdated'?: string | undefined;
        'status.missing'?: string | undefined;
        'status.emojiDone'?: string | undefined;
        'status.emojiOutdated'?: string | undefined;
        'status.emojiMissing'?: string | undefined;
        'statusByLocale.heading'?: string | undefined;
        'statusByLocale.detailsSummaryFormat'?: string | undefined;
        'statusByLocale.detailsTitleFormat'?: string | undefined;
        'statusByLocale.outdatedLocalizationLink'?: string | undefined;
        'statusByLocale.incompleteLocalizationLink'?: string | undefined;
        'statusByLocale.createFileLink'?: string | undefined;
        'statusByLocale.sourceChangeHistoryLink'?: string | undefined;
        'statusByLocale.missingKeys'?: string | undefined;
        'statusByLocale.completeLocalization'?: string | undefined;
        'statusByFile.heading'?: string | undefined;
        'statusByFile.tableRowFile'?: string | undefined;
        'statusByFile.tableSummaryFormat'?: string | undefined;
    } | undefined;
}>>;
type Dashboard = z.output<typeof DashboardSchema>;

export { DashboardSchema as D, type Dashboard as a };
