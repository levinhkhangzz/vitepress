import jiti from 'jiti';
import { resolve } from 'node:path';
import { joinURL } from 'ufo';
import { error, highlight } from '../cli/console.mjs';

function toUtcString(date) {
  return new Date(date).toISOString();
}
function getStringFromFormat(format, placeholders) {
  let formatResult = format;
  Object.keys(placeholders).forEach((key) => {
    formatResult = formatResult.replace(key, placeholders[key] ?? "");
  });
  return formatResult;
}
function loadWithJiti(path) {
  const loadFile = jiti(process.cwd(), {
    interopDefault: true,
    esmResolve: true
  });
  try {
    const resolvedPath = resolve(path);
    const file = loadFile(resolvedPath);
    return file;
  } catch (e) {
    console.error(error(`Failed to load module at ${highlight(path)}
`));
    throw e;
  }
}
function cleanJoinURL(base, ...paths) {
  return joinURL(base, ...paths).replace("../", "").replace("./", "");
}

export { cleanJoinURL as c, getStringFromFormat as g, loadWithJiti as l, toUtcString as t };
