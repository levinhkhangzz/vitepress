import getPort from 'get-port';
import { existsSync, readFileSync } from 'node:fs';
import http from 'node:http';
import { resolve, join } from 'node:path';
import { loadConfig } from '../config/index.mjs';
import { preview as preview$1, highlight, bold } from '../cli/console.mjs';
import 'zod-validation-error';
import '../shared/core.492ac407.mjs';
import 'jiti';
import 'ufo';
import 'zod';
import '@clack/core';
import 'picocolors';
import '../shared/core.ae13c5eb.mjs';

async function preview(options) {
  const configPath = options.config ?? "./lunaria.config.json";
  const serverPort = await getPort({ port: options.port ? parseInt(options.port) : 3e3 });
  const { userConfig } = await loadConfig(configPath);
  const outDir = resolve(userConfig.outDir);
  const dashboardPath = join(outDir, "index.html");
  if (!existsSync(dashboardPath)) {
    console.log(preview$1(`Could not find a build to preview at ${highlight(dashboardPath)}`));
    process.exit(0);
  }
  http.createServer((_, res) => {
    const dashboardFile = readFileSync(dashboardPath);
    res.writeHead(200, { "Content-Type": "text/html" });
    res.write(dashboardFile, "binary");
    res.end();
  }).listen(serverPort);
  console.log(preview$1(`Server open on ${highlight(`http://localhost:${serverPort.toString()}/`)}`));
  console.log(preview$1(`Press ${bold("CNTRL + C")} to close it.`));
}

export { preview };
